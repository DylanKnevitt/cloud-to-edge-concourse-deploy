---
# Use reference instead of repeating the skyway params
skyway_params: &skyway-params
  ENABLE_ANSIBLE_DEBUG: ((enable_ansible_debug))
  SKYWAY_INSTALLER: ((skyway_installer))
  NTPSERVERS: ((ntpservers))
  DNSSERVER: ((dnsserver))
  DNSDOMAIN: ((dnsdomain))
  DEFAULTGATEWAY: ((defaultgateway))
  NETMASK: ((netmask))
  binary_webserver: ((binary_webserver))
  base_ova_name: ((base_ova_name))
  base_ova_name_arm: ((base_ova_name_arm))
  base_ova_origin: ((binary_webserver))/((base_ova_name))
  base_ova_origin_arm: ((binary_webserver))/((base_ova_name_arm))
  skyway_edge_vm_basename: ((skyway_edge_vm_basename))
  skyway_edge_vm_user: ((skyway_edge_vm_user))
  skyway_edge_vm_password: ((skyway_edge_vm_password))
  skyway_edge_vm_network: ((skyway_edge_vm_network))
  skyway_edge_vm_ssh_priv_key: ((skyway_edge_vm_ssh_priv_key))
  skyway_edge_vm_ssh_pub_key: ((skyway_edge_vm_ssh_pub_key))
  skyway_edge_deploy_size: ((skyway_edge_deploy_size))
  GIT_KEY: ((git_key))
  azure_cli_application_id: ((azure_cli_application_id))
  azure_cli_application_key: ((azure_cli_application_key))
  azure_cli_tenant_id: ((azure_cli_tenant_id))
  azure_iot_hub_name: ((azure_iot_hub_name))
  azure_iot_group: ((azure_iot_group))
  azure_iot_edge_names: ((azure_iot_edge_names))
  aws_access_key: ((aws_access_key))
  aws_secret_key: ((aws_secret_key))
  greengrass_s3_bucket: ((greengrass_s3_bucket))
  skip_s3_uploads: false
  greengrass_group_names: ((greengrass_group_names))
  greengrass_device_stub: ((greengrass_device_stub))
  greengrass_device_count: ((greengrass_device_count))
  greengrass_deploy: ((greengrass_deploy))
  skyway_edges: ((skyway_edges))
  skyway_edge_start: 0
  skyway_edge_end: 0

{% for range in ranges %}
skyway_params_{{ range.min }}_{{ range.max }}: &skyway_params_{{ loop.index }}
  <<: *skyway-params
  skyway_edge_start: {{ range.min }}
  skyway_edge_end: {{ range.max }}
{% endfor %}

groups:

- name: full-deploy
  jobs:
  - skyway-deploy
  - cloud-provider-buildout
  - configure-edge-version
{% for range in ranges %}
  - launch-edge-gateway-vm-{{ range.min }}-{{ range.max }}
  - add-skyway-edge-gateway-{{ range.min }}-{{ range.max }}
  - skyway-edge-gateway-configure-{{ range.min }}-{{ range.max }}
{% endfor %}
  - pipeline-complete-VERSION-45{{ config_version|default("") }}


- name: cloud-provider
  jobs:
  - cloud-provider-buildout
  - configure-edge-version

- name: gateways
  jobs:
{% for range in ranges %}
  - launch-edge-gateway-vm-{{ range.min }}-{{ range.max }}
  - add-skyway-edge-gateway-{{ range.min }}-{{ range.max }}
  - skyway-edge-gateway-configure-{{ range.min }}-{{ range.max }}
{% endfor %}

- name: complete
  jobs:
  - pipeline-complete-VERSION-45{{ config_version|default("") }}

# - name: cleanup
#   jobs:
#   - uninstall-skyway

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource

resources:
- name: skyway-pipeline
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/skyway-concourse-deploy.git
    branch: master
    private_key: ((git_key))

- name: skyway-automation
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/skyway-automation
    branch: master
    private_key: ((git_key))

- name: ansible-role-azure-iot
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/ansible-role-azure-iot
    branch: master
    private_key: ((git_key))

- name: ansible-role-azure-edge
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/ansible-role-azure-edge
    branch: master
    private_key: ((git_key))

- name: ansible-role-skyway-edge-vm
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/ansible-role-skyway-edge-vm
    branch: master
    private_key: ((git_key))

- name: ansible-aws-greengrass
  type: git
  source:
    uri: https://github.com/vmware/ansible-aws-greengrass.git
    branch: master

- name: base-ova
  type: file-url
  source:
    #username: username
    #password: password
    url: ((binary_webserver))/((base_ova_name))
    filename: ((base_ova_name))
    skip_ssl_verification: true

# Download from https://my.vmware.com/group/vmware/details?productId=614&downloadGroup=OVFTOOL420#
- name: ovftool
  type: file-url
  source:
    #username: username
    #password: password
    url: ((binary_webserver))/((ovftool_image))
    filename: ((ovftool_image))
    skip_ssl_verification: true

jobs:

- name: skyway-deploy
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
    - get: base-ova
    - get: ovftool
    - get: ansible-aws-greengrass

  - task: install-skyway
    file: skyway-pipeline/tasks/install-skyway/task.yml
    params: *skyway-params

- name: cloud-provider-buildout
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [skyway-deploy]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: initialize-cloud-iot
    file: skyway-pipeline/tasks/initialize-cloud-iot/task.yml
    params: *skyway-params

- name: configure-edge-version
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [cloud-provider-buildout]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: deploy-edge-version
    file: skyway-pipeline/tasks/deploy-edge-version/task.yml
    params: *skyway-params

{% for range in ranges %}
- name: launch-edge-gateway-vm-{{ range.min }}-{{ range.max }}
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [configure-edge-version]
      trigger: true
    - get: ansible-role-skyway-edge-vm

  - task: launch-edge-gateway-vm
    file: skyway-pipeline/tasks/launch-edge-gateway-vm/task.yml
    params: *skyway_params_{{ loop.index }}

- name: add-skyway-edge-gateway-{{ range.min }}-{{ range.max }}
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [launch-edge-gateway-vm-{{ range.min }}-{{ range.max }}]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass
    - get: ansible-role-skyway-edge-vm

  - task: add-skyway-edge-gateway
    file: skyway-pipeline/tasks/add-skyway-edge-gateway/task.yml
    params: *skyway_params_{{ loop.index }}

- name: skyway-edge-gateway-configure-{{ range.min }}-{{ range.max }}
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [add-skyway-edge-gateway-{{ range.min }}-{{ range.max }}]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass
    - get: ansible-role-skyway-edge-vm

  - task: skyway-edge-gateway-configure
    file: skyway-pipeline/tasks/edge-gateway-configure/task.yml
    params: *skyway_params_{{ loop.index }}
{% endfor %}

- name: pipeline-complete-VERSION-45{{ config_version|default("") }}
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed:
{% for range in ranges %}
        - skyway-edge-gateway-configure-{{ range.min }}-{{ range.max }}
{% endfor %}
      trigger: true

  - task: pipeline-complete-VERSION-45{{ config_version|default("") }}
    file: skyway-pipeline/tasks/noop/task.yml
    params: *skyway-params
