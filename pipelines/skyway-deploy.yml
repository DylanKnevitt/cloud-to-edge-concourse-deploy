---
# Use reference instead of repeating the skyway params
skyway_params: &skyway-params
  SKYWAY_INSTALLER: ((skyway_installer))
  VCENTER_HOST: ((vcenter_host))
  VCENTER_USR: ((vcenter_usr))
  VCENTER_PWD: ((vcenter_pwd))
  VCENTER_DATACENTER: ((vcenter_datacenter))
  VCENTER_DATASTORE: ((vcenter_datastore))
  VCENTER_CLUSTER: ((vcenter_cluster))
  VCENTER_MANAGER: ((vcenter_manager))
  VCENTER_RP: ((vcenter_rp))
  NTPSERVERS: ((ntpservers))
  MGMT_PORTGROUP: ((mgmt_portgroup))
  DNSSERVER: ((dnsserver))
  DNSDOMAIN: ((dnsdomain))
  DEFAULTGATEWAY: ((defaultgateway))
  NETMASK: ((netmask))
  SKYWAY_MANAGER_VM_NAME: ((skyway_manager_vm_name))
  SKYWAY_MANAGER_HOST_NAME: ((skyway_manager_host_name))
  SKYWAY_MANAGER_IP: ((skyway_manager_ip))
  SKYWAY_MANAGER_ADMIN_USER: ((skyway_manager_admin_user))
  SKYWAY_MANAGER_ADMIN_PWD: ((skyway_manager_admin_pwd))
  SKYWAY_MANAGER_ROOT_PWD: ((skyway_manager_root_pwd))
  SKYWAY_EDGE_HOST_PREFIX: ((skyway_edge_host_prefix))
  SKYWAY_EDGE_VM_NAME_PREFIX: ((skyway_edge_vm_name_prefix))
  SKYWAY_MGR_DEPLOY_SIZE: ((skyway_mgr_deploy_size))
  SKYWAY_EDGE_DEPLOY_SIZE: ((skyway_edge_deploy_size))
  SKYWAY_EDGE_CLUSTER: ((skyway_edge_cluster))
  ENABLE_ANSIBLE_DEBUG: ((enable_ansible_debug))
  GIT_KEY: ((git_key))
  azure_cli_application_id: ((azure_cli_application_id))
  azure_cli_application_key: ((azure_cli_application_key))
  azure_cli_tenant_id: ((azure_cli_tenant_id))
  azure_iot_hub_name: ((azure_iot_hub_name))
  azure_iot_group: ((azure_iot_group))
  aws_access_key: ((aws_access_key))
  aws_secret_key: ((aws_secret_key))
  greengrass_s3_bucket: ((greengrass_s3_bucket))
  greengrass_group_names: ((greengrass_group_names))
  greengrass_device_stub: ((greengrass_device_stub))
  greengrass_device_count: ((greengrass_device_count))
  greengrass_deploy: ((greengrass_deploy))
  skyway_edges: ((skyway_edges))
  skyway_edge_start: ((skyway_edges))
  skyway_edge_end: ((skyway_edges))

skyway_params_1_10: &skyway_params_1_10
  <<: *skyway-params
  skyway_edge_start: 1
  skyway_edge_end: 10

skyway_params_11_20: &skyway_params_11_20
  <<: *skyway-params
  skyway_edge_start: 11
  skyway_edge_end: 20

groups:

- name: full-deploy
  jobs:
  - skyway-deploy
  - cloud-provider-buildout
  - configure-edge-version
  - launch-edge-gateway-vm-1-10
  - add-skyway-edge-gateway-1-10
  - skyway-edge-gateway-configure-1-10
  - launch-edge-gateway-vm-11-20
  - add-skyway-edge-gateway-11-20
  - skyway-edge-gateway-configure-11-20
  - pipeline-complete-VERSION-13


- name: cloud-provider
  jobs:
  - cloud-provider-buildout
  - configure-edge-version

- name: gateways
  jobs:
  - launch-edge-gateway-vm-1-10
  - add-skyway-edge-gateway-1-10
  - skyway-edge-gateway-configure-1-10
  - launch-edge-gateway-vm-11-20
  - add-skyway-edge-gateway-11-20
  - skyway-edge-gateway-configure-11-20

# - name: cleanup
#   jobs:
#   - uninstall-skyway

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource

resources:
- name: skyway-pipeline
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/skyway-concourse-deploy.git
    branch: master
    private_key: ((git_key))

- name: skyway-automation
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/skyway-automation
    branch: master
    private_key: ((git_key))

- name: ansible-role-azure-iot
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/ansible-role-azure-iot
    branch: master
    private_key: ((git_key))

- name: ansible-role-azure-edge
  type: git
  source:
    uri: git@gitlab.com:vmworld2018/ansible-role-azure-edge
    branch: master
    private_key: ((git_key))

- name: ansible-aws-greengrass
  type: git
  source:
    uri: https://github.com/vmware/ansible-aws-greengrass.git
    branch: master

- name: base-ova
  type: file-url
  source:
    #username: username
    #password: password
    url: ((binary_webserver))/((base_ova))
    filename: ((base_ova))
    skip_ssl_verification: true

# Download from https://my.vmware.com/group/vmware/details?productId=614&downloadGroup=OVFTOOL420#
- name: ovftool
  type: file-url
  source:
    #username: username
    #password: password
    url: ((binary_webserver))/((ovftool_image))
    filename: ((ovftool_image))
    skip_ssl_verification: true

jobs:

- name: skyway-deploy
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
    - get: base-ova
    - get: ovftool
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: install-skyway
    file: skyway-pipeline/tasks/install-skyway/task.yml
    params: *skyway-params

- name: cloud-provider-buildout
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [skyway-deploy]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: initialize-cloud-iot
    file: skyway-pipeline/tasks/initialize-cloud-iot/task.yml
    params: *skyway-params

- name: configure-edge-version
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [cloud-provider-buildout]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: deploy-edge-version
    file: skyway-pipeline/tasks/deploy-edge-version/task.yml
    params: *skyway-params

- name: launch-edge-gateway-vm-1-10
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [configure-edge-version]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: launch-edge-gateway-vm
    file: skyway-pipeline/tasks/launch-edge-gateway-vm/task.yml
    params: *skyway_params_1_10

- name: add-skyway-edge-gateway-1-10
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [launch-edge-gateway-vm-1-10]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: add-skyway-edge-gateway
    file: skyway-pipeline/tasks/add-skyway-edge-gateway/task.yml
    params: *skyway_params_1_10

- name: skyway-edge-gateway-configure-1-10
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [add-skyway-edge-gateway-1-10]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: skyway-edge-gateway-configure
    file: skyway-pipeline/tasks/edge-gateway-configure/task.yml
    params: *skyway_params_1_10

- name: launch-edge-gateway-vm-11-20
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [configure-edge-version]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: launch-edge-gateway-vm
    file: skyway-pipeline/tasks/launch-edge-gateway-vm/task.yml
    params: *skyway_params_11_20

- name: add-skyway-edge-gateway-11-20
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [launch-edge-gateway-vm-11-20]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: add-skyway-edge-gateway
    file: skyway-pipeline/tasks/add-skyway-edge-gateway/task.yml
    params: *skyway_params_11_20

- name: skyway-edge-gateway-configure-11-20
  plan:
  - aggregate:
    - get: skyway-pipeline
    - get: skyway-automation
      params: {globs: []}
      passed: [add-skyway-edge-gateway-11-20]
      trigger: true
    - get: ansible-role-azure-iot
    - get: ansible-role-azure-edge
    - get: ansible-aws-greengrass

  - task: skyway-edge-gateway-configure
    file: skyway-pipeline/tasks/edge-gateway-configure/task.yml
    params: *skyway_params_11_20

- name: pipeline-complete-VERSION-13
  plan:
  - aggregate:
    - get: skyway-automation
      params: {globs: []}
      passed: [skyway-edge-gateway-configure-1-10, skyway-edge-gateway-configure-11-20]
      trigger: true

  - task: pipeline-complete-VERSION-13
    file: skyway-pipeline/tasks/noop/task.yml
    params: *skyway-params
